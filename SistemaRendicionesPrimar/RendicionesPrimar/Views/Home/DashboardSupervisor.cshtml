@model RendicionesPrimar.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Primar | Sistema de Rendiciones";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PortalSupervisor - Sistema de Rendiciones | Primar S.A.</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
</head>
<body>

<div class="app-container">
    <!-- Header ejecutivo -->
    <header class="header">
        <div class="header-content">
            <div class="brand">
                <i class="fas fa-building"></i>
                <div class="brand-text">
                    <h1>Primar S.A.</h1>
                    <span>Sistema de Rendiciones</span>
                </div>
            </div>
            
            <nav class="nav">
                <a href="@Url.Action("Dashboard", "Supervisores")" class="nav-link active">
                    <i class="fas fa-home"></i>
                    Panel de Control
                </a>
                <a href="@Url.Action("RendicionesPendientes", "Supervisores")" class="nav-link">
                    <i class="fas fa-clock"></i>
                    Pendientes de Revisión
                </a>
                <a href="@Url.Action("Notificaciones", "Supervisores")" class="nav-link">
                    <i class="fas fa-bell"></i>
                    Notificaciones
                    @if (ViewBag.NotificacionesNoLeidas != null && ViewBag.NotificacionesNoLeidas > 0)
                    {
                        <span class="badge">@ViewBag.NotificacionesNoLeidas</span>
                    }
                </a>
                <a href="@Url.Action("Perfil", "Supervisores")" class="nav-link">
                    <i class="fas fa-user"></i>
                    Mi Perfil
                </a>
            </nav>
            
            <div class="user-section">
                <div class="user-info">
                    <span class="user-name">@(ViewBag.UserName ?? "Usuario")</span>
                    <span class="user-role role-supervisor">Supervisor</span>
                </div>
                <button class="btn-logout" onclick="window.location.href='@Url.Action("Logout", "Account")'">
                    <i class="fas fa-sign-out-alt"></i>
                    Cerrar Sesión
                </button>
            </div>
        </div>
    </header>

    <!-- Contenido principal -->
    <main class="main">
        <div class="container">
            
            <!-- Header ejecutivo -->
            <div class="dashboard-header" style="position:relative;">
                <div class="salmon-bg" id="salmonContainer" style="position:absolute;left:0;top:0;width:100%;height:100%;z-index:1;pointer-events:none;overflow:hidden;"></div>
                <div style="position:relative;z-index:2;">
                    <div class="header-title">
                        <h1>Panel de Control Supervisor</h1>
                        <p>Gestión de aprobaciones y seguimiento de rendiciones - Primar S.A.</p>
                    </div>
                    <div class="header-date">
                        <span>@DateTime.Now.ToString("dddd, dd MMMM yyyy", new System.Globalization.CultureInfo("es-ES"))</span>
                    </div>
                </div>
            </div>

            <!-- KPIs principales -->
            <div class="kpi-grid">
                <div class="kpi-card primary">
                    <div class="kpi-header">
                        <div class="kpi-title">RENDICIONES<br>PENDIENTES</div>
                        <div class="kpi-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                    </div>
                    <div class="kpi-value">@(Model?.RendicionesPendientes ?? 0)</div>
                    <div class="kpi-trend neutral">
                        <i class="fas fa-minus"></i>
                        Requieren tu revisión
                    </div>
                </div>

                <div class="kpi-card success">
                    <div class="kpi-header">
                        <div class="kpi-title">APROBADAS<br>HOY</div>
                        <div class="kpi-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                    <div class="kpi-value">@(Model?.RendicionesAprobadas ?? 0)</div>
                    <div class="kpi-trend positive">
                        <i class="fas fa-arrow-up"></i>
                        +5% vs ayer
                    </div>
                </div>

                <div class="kpi-card warning">
                    <div class="kpi-header">
                        <div class="kpi-title">EN ESPERA<br>GERENCIA</div>
                        <div class="kpi-icon">
                            <i class="fas fa-hourglass-half"></i>
                        </div>
                    </div>
                    <div class="kpi-value">@(Model?.TotalRendiciones - Model?.RendicionesPendientes ?? 0)</div>
                    <div class="kpi-trend neutral">
                        <i class="fas fa-minus"></i>
                        Pendientes de aprobación final
                    </div>
                </div>
            </div>

            <!-- Dashboard de gráficos -->
            <div class="charts-section">
                <div class="chart-container">
                    <div class="chart-header">
                        <h3><i class="fas fa-chart-pie"></i> Estado de Rendiciones</h3>
                    </div>
                    <div class="chart-content">
                        <canvas id="statusChart"></canvas>
                    </div>
                </div>

                <div class="chart-container">
                    <div class="chart-header">
                        <h3><i class="fas fa-chart-line"></i> Aprobaciones por Día</h3>
                    </div>
                    <div class="chart-content">
                        <canvas id="approvalChart"></canvas>
                    </div>
                </div>

                <div class="chart-container">
                    <div class="chart-header">
                        <h3><i class="fas fa-chart-bar"></i> Por Departamento</h3>
                    </div>
                    <div class="chart-content">
                        <canvas id="departmentChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Acciones rápidas -->
            <div class="actions-section">
                <h2>Acciones Rápidas</h2>
                <div class="actions-grid">
                    <a href="@Url.Action("Index", "Rendiciones")" class="action-card featured">
                        <div class="action-icon">
                            <i class="fas fa-tasks"></i>
                        </div>
                        <div class="action-content">
                            <h3>Revisar Pendientes</h3>
                            <p>Aprobar o rechazar rendiciones pendientes</p>
                        </div>
                        <div class="action-arrow">
                            <i class="fas fa-chevron-right"></i>
                        </div>
                    </a>

                    @{
                        var userRole = Context.User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "empleado";
                        var userEmail = Context.User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "";
                        var isCamila = userRole == "aprobador1" && userEmail == "camila.flores@primar.cl";
                    }
                    @if (isCamila)
                    {
                        <a href="@Url.Action("Index", "Admin")" class="action-card">
                            <div class="action-icon">
                                <i class="fas fa-users-cog"></i>
                            </div>
                            <div class="action-content">
                                <h3>Gestión de Usuarios</h3>
                                <p>Administrar usuarios del sistema</p>
                            </div>
                            <div class="action-arrow">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </a>
                    }

                    <a href="@Url.Action("Notificaciones", "Supervisores")" class="action-card">
                        <div class="action-icon">
                            <i class="fas fa-bell"></i>
                        </div>
                        <div class="action-content">
                            <h3>Notificaciones</h3>
                            <p>Ver alertas y actualizaciones</p>
                        </div>
                        <div class="action-arrow">
                            <i class="fas fa-chevron-right"></i>
                        </div>
                    </a>
                </div>
            </div>

            <!-- Actividad reciente -->
            @if (Model?.UltimasRendiciones != null && Model.UltimasRendiciones.Any())
            {
                <div class="activity-section">
                    <h2>Actividad Reciente</h2>
                    <div class="activity-list">
                        @foreach (var actividad in Model.UltimasRendiciones)
                        {
                            <div class="activity-item">
                                <div class="activity-dot"></div>
                                <div class="activity-content">
                                    <p class="activity-text">@actividad</p>
                                    <span class="activity-time">Hace 2 horas</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

        </div>
    </main>
</div>

<style>
/* Variables corporativas */
:root {
    --primar-primary: rgb(31, 90, 136);
    --primar-primary-dark: rgb(31, 90, 136);
    --primar-primary-light:rgb(31, 90, 136);
    --primar-secondary: #f1f5f9;
    --primar-success: #10b981;
    --primar-warning: #f59e0b;
    --primar-danger: #ef4444;
    --primar-info: #06b6d4;
    --primar-text: #1e293b;
    --primar-text-light: #64748b;
    --primar-background: #f8fafc;
    --primar-white: #ffffff;
    --primar-border: #e2e8f0;
    --primar-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    --primar-shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    --primar-radius: 12px;
    --primar-radius-sm: 8px;
    --primar-transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    --primar-gradient: linear-gradient(135deg, var(--primar-primary) 0%, var(--primar-primary-light) 100%);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: var(--primar-background);
    color: var(--primar-text);
    line-height: 1.6;
    font-size: 15px;
    font-weight: 400;
}

.app-container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

/* Header */
.header {
    background: var(--primar-gradient);
    box-shadow: var(--primar-shadow);
    position: sticky;
    top: 0;
    z-index: 1000;
}

.header-content {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 70px;
}

.brand {
    display: flex;
    align-items: center;
    color: white;
    gap: 12px;
}

.brand i {
    font-size: 1.5rem;
}

.brand-text h1 {
    font-size: 1.25rem;
    font-weight: 700;
    margin: 0;
    line-height: 1.2;
}

.brand-text span {
    font-size: 0.75rem;
    opacity: 0.9;
    font-weight: 400;
}

.nav {
    display: flex;
    align-items: center;
    gap: 8px;
}

.nav-link {
    color: rgba(255,255,255,0.95);
    text-decoration: none;
    padding: 10px 16px;
    border-radius: var(--primar-radius-sm);
    font-weight: 500;
    font-size: 0.9rem;
    transition: var(--primar-transition);
    display: flex;
    align-items: center;
    gap: 8px;
    position: relative;
}

.nav-link:hover {
    color: white;
    background-color: rgba(255,255,255,0.15);
    text-decoration: none;
}

.nav-link.active {
    background-color: rgba(255,255,255,0.2);
    color: white;
}

.badge {
    position: absolute;
    top: -4px;
    right: -4px;
    background: var(--primar-danger);
    color: white;
    font-size: 0.7rem;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 18px;
    text-align: center;
}

.user-section {
    display: flex;
    align-items: center;
    gap: 16px;
    padding-left: 24px;
    border-left: 1px solid rgba(255,255,255,0.2);
}

.user-info {
    color: white;
    text-align: right;
}

.user-name {
    display: block;
    font-weight: 500;
    font-size: 0.9rem;
}

.user-role {
    display: inline-block;
    font-size: 0.7rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: 2px 8px;
    border-radius: 12px;
    margin-top: 2px;
}

.role-supervisor { background: rgba(245, 158, 11, 0.3); }

.btn-logout {
    background: rgba(255,255,255,0.15);
    border: 1px solid rgba(255,255,255,0.2);
    color: white;
    padding: 8px 16px;
    border-radius: var(--primar-radius-sm);
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: var(--primar-transition);
    display: flex;
    align-items: center;
    gap: 8px;
}

.btn-logout:hover {
    background: rgba(255,255,255,0.25);
}

/* Main content */
.main {
    flex: 1;
    padding: 40px 0;
}

.container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 24px;
}

/* Dashboard header */
.dashboard-header {
    text-align: center;
    margin-bottom: 48px;
    padding: 32px 0;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: var(--primar-radius);
    box-shadow: var(--primar-shadow);
}

.header-title h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--primar-text);
    margin-bottom: 8px;
    background: var(--primar-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.header-title p {
    font-size: 1.1rem;
    color: var(--primar-text-light);
    margin-bottom: 16px;
}

.header-date span {
    font-size: 0.9rem;
    color: var(--primar-text-light);
    font-weight: 500;
    background: var(--primar-white);
    padding: 8px 16px;
    border-radius: 20px;
    box-shadow: var(--primar-shadow);
}

/* KPIs */
.kpi-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 24px;
    margin-bottom: 48px;
}

.kpi-card {
    background: var(--primar-white);
    border-radius: var(--primar-radius);
    padding: 24px;
    box-shadow: var(--primar-shadow);
    transition: var(--primar-transition);
    border-top: 4px solid;
    position: relative;
    overflow: hidden;
}

.kpi-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--primar-shadow-lg);
}

.kpi-card.primary { border-top-color: var(--primar-primary); }
.kpi-card.warning { border-top-color: var(--primar-warning); }
.kpi-card.success { border-top-color: var(--primar-success); }
.kpi-card.info { border-top-color: var(--primar-info); }

.kpi-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 16px;
}

.kpi-title {
    font-size: 0.8rem;
    font-weight: 700;
    color: var(--primar-text-light);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.2;
}

.kpi-icon {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    opacity: 0.8;
}

.primary .kpi-icon { background: rgba(37, 99, 235, 0.1); color: var(--primar-primary); }
.warning .kpi-icon { background: rgba(245, 158, 11, 0.1); color: var(--primar-warning); }
.success .kpi-icon { background: rgba(16, 185, 129, 0.1); color: var(--primar-success); }
.info .kpi-icon { background: rgba(6, 182, 212, 0.1); color: var(--primar-info); }

.kpi-value {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--primar-text);
    margin-bottom: 8px;
}

.kpi-trend {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 0.8rem;
    font-weight: 600;
}

.kpi-trend.positive { color: var(--primar-success); }
.kpi-trend.negative { color: var(--primar-danger); }
.kpi-trend.neutral { color: var(--primar-text-light); }

/* Charts section */
.charts-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 24px;
    margin-bottom: 48px;
}

.chart-container {
    background: var(--primar-white);
    border-radius: var(--primar-radius);
    box-shadow: var(--primar-shadow);
    overflow: hidden;
    transition: var(--primar-transition);
}

.chart-container:hover {
    transform: translateY(-2px);
    box-shadow: var(--primar-shadow-lg);
}

.chart-header {
    padding: 20px 24px;
    border-bottom: 1px solid var(--primar-border);
    background: var(--primar-secondary);
}

.chart-header h3 {
    font-size: 1rem;
    font-weight: 600;
    color: var(--primar-text);
    display: flex;
    align-items: center;
    gap: 8px;
}

.chart-header i {
    color: var(--primar-primary);
}

.chart-content {
    padding: 24px;
    height: 300px;
}

/* Actions */
.actions-section {
    margin-bottom: 48px;
}

.actions-section h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primar-text);
    margin-bottom: 24px;
}

.actions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
}

.action-card {
    background: var(--primar-white);
    border: 1px solid var(--primar-border);
    border-radius: var(--primar-radius);
    padding: 24px;
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
    gap: 16px;
    transition: var(--primar-transition);
    position: relative;
    overflow: hidden;
}

.action-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--primar-shadow-lg);
    text-decoration: none;
    color: inherit;
    border-color: var(--primar-primary);
}

.action-card.featured {
    background: var(--primar-gradient);
    color: white;
    border-color: var(--primar-primary);
}

.action-card.featured:hover {
    color: white;
}

.action-icon {
    width: 56px;
    height: 56px;
    border-radius: var(--primar-radius);
    background: var(--primar-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--primar-primary);
    font-size: 1.5rem;
    flex-shrink: 0;
}

.action-card.featured .action-icon {
    background: rgba(255, 255, 255, 0.2);
    color: white;
}

.action-content {
    flex: 1;
}

.action-content h3 {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 4px;
}

.action-content p {
    font-size: 0.9rem;
    opacity: 0.8;
    margin: 0;
}

.action-arrow {
    color: var(--primar-text-light);
    font-size: 1.2rem;
    transition: var(--primar-transition);
}

.action-card:hover .action-arrow {
    color: var(--primar-primary);
    transform: translateX(4px);
}

.action-card.featured:hover .action-arrow {
    color: white;
}

/* Activity */
.activity-section h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primar-text);
    margin-bottom: 24px;
}

.activity-list {
    background: var(--primar-white);
    border-radius: var(--primar-radius);
    box-shadow: var(--primar-shadow);
    overflow: hidden;
}

.activity-item {
    padding: 20px 24px;
    border-bottom: 1px solid var(--primar-border);
    display: flex;
    align-items: flex-start;
    gap: 16px;
    transition: var(--primar-transition);
}

.activity-item:last-child {
    border-bottom: none;
}

.activity-item:hover {
    background: var(--primar-secondary);
}

.activity-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--primar-primary);
    margin-top: 8px;
    flex-shrink: 0;
}

.activity-content {
    flex: 1;
}

.activity-text {
    font-size: 0.9rem;
    color: var(--primar-text);
    margin-bottom: 4px;
}

.activity-time {
    font-size: 0.8rem;
    color: var(--primar-text-light);
}

/* Responsive */
@@media (max-width: 768px) {
    .header-content {
        flex-direction: column;
        height: auto;
        padding: 16px 24px;
        gap: 16px;
    }
    
    .nav {
        flex-wrap: wrap;
        justify-content: center;
    }
    
    .user-section {
        border-left: none;
        border-top: 1px solid rgba(255,255,255,0.2);
        padding-left: 0;
        padding-top: 16px;
    }
    
    .main {
        padding: 24px 0;
    }
    
    .container {
        padding: 0 16px;
    }
    
    .dashboard-header {
        margin-bottom: 32px;
        padding: 24px 16px;
    }
    
    .header-title h1 {
        font-size: 2rem;
    }
    
    .kpi-grid,
    .charts-section,
    .actions-grid {
        grid-template-columns: 1fr;
    }
    
    .charts-section {
        grid-template-columns: 1fr;
    }
    
    .chart-content {
        height: 250px;
    }
}

@@media (max-width: 480px) {
    .container {
        padding: 0 12px;
    }
    
    .brand {
        flex-direction: column;
        gap: 4px;
        text-align: center;
    }
    
    .nav {
        flex-direction: column;
        gap: 8px;
    }
    
    .user-section {
        flex-direction: column;
        gap: 12px;
    }
    
    .action-card {
        flex-direction: column;
        text-align: center;
        gap: 16px;
    }
    
    .kpi-card {
        text-align: center;
    }
    
    .kpi-header {
        flex-direction: column;
        gap: 12px;
        align-items: center;
    }
}
</style>

<!-- Estilos para salmones animados -->
<style>
/* ===== SALMONES ANIMADOS ===== */
.salmon-container {
    position: relative;
    width: 100%;
    height: 80px;
    overflow: hidden;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    z-index: 1;
    border-bottom: 2px solid #e2e8f0;
}

.salmon {
    position: absolute;
    width: 120px;
    height: 48px;
    opacity: 0.35;
    filter: blur(0.5px) drop-shadow(0 2px 4px rgba(0,0,0,0.10));
    pointer-events: none;
    z-index: 1;
}

.salmon svg {
    width: 100%;
    height: 100%;
    filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));
}

.salmon-tail {
    animation: tailWiggle 2s ease-in-out infinite;
    transform-origin: 35px 20px;
}

@@keyframes swimSalmon {
    0% { left: -120px; opacity: 0; }
    10% { opacity: 0.35; }
    90% { opacity: 0.35; }
    100% { left: 100%; opacity: 0; }
}

@@keyframes tailWiggle {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(-5deg); }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Gráfico de estado de rendiciones
    const statusCtx = document.getElementById('statusChart').getContext('2d');
    new Chart(statusCtx, {
        type: 'doughnut',
        data: {
            labels: ['Pendientes', 'Aprobadas', 'En Espera Gerencia', 'Rechazadas'],
            datasets: [{
                data: [@(Model?.RendicionesPendientes ?? 0), @(Model?.RendicionesAprobadas ?? 0), @(Model?.TotalRendiciones - Model?.RendicionesPendientes ?? 0), 5],
                backgroundColor: [
                    '#f59e0b',
                    '#10b981',
                    '#06b6d4',
                    '#ef4444'
                ],
                borderWidth: 0,
                cutout: '60%'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20,
                        usePointStyle: true,
                        font: {
                            size: 12
                        }
                    }
                }
            }
        }
    });

    // Gráfico de aprobaciones por día
    const approvalCtx = document.getElementById('approvalChart').getContext('2d');
    new Chart(approvalCtx, {
        type: 'line',
        data: {
            labels: ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'],
            datasets: [{
                label: 'Aprobaciones',
                data: [12, 15, 8, 18, 22, 5, 3],
                borderColor: '#10b981',
                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4,
                pointBackgroundColor: '#10b981',
                pointBorderColor: '#ffffff',
                pointBorderWidth: 2,
                pointRadius: 6
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        color: '#f1f5f9'
                    },
                    ticks: {
                        font: {
                            size: 11
                        }
                    }
                },
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        font: {
                            size: 11
                        }
                    }
                }
            }
        }
    });

    // Gráfico por departamento
    const departmentCtx = document.getElementById('departmentChart').getContext('2d');
    new Chart(departmentCtx, {
        type: 'bar',
        data: {
            labels: ['Finanzas', 'RRHH', 'Ventas', 'Operaciones', 'IT'],
            datasets: [{
                label: 'Rendiciones',
                data: [15, 8, 25, 12, 6],
                backgroundColor: [
                    '#2563eb',
                    '#10b981',
                    '#f59e0b',
                    '#ef4444',
                    '#06b6d4'
                ],
                borderRadius: 6,
                borderSkipped: false,
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        color: '#f1f5f9'
                    },
                    ticks: {
                        font: {
                            size: 11
                        }
                    }
                },
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        font: {
                            size: 11
                        }
                    }
                }
            }
        }
    });
});
</script>

<!-- JavaScript para control dinámico de los salmones -->
<script>
    // Función para crear un salmón
    function createSalmon() {
        const container = document.getElementById('salmonContainer');
        if (!container) return;
        const salmon = document.createElement('div');
        salmon.className = 'salmon';
        // Altura relativa al header
        const headerHeight = container.offsetHeight;
        const topPosition = Math.random() * (headerHeight - 48);
        salmon.style.top = topPosition + 'px';
        // Duración de animación aleatoria
        const duration = Math.random() * 10 + 12; // 12-22s
        salmon.style.animation = `swimSalmon ${duration}s linear forwards`;
        salmon.innerHTML = `
            <svg viewBox="0 0 120 48" width="120" height="48">
                <path d="M35,20 Q55,5 85,15 Q95,20 85,25 Q55,35 35,20" fill="#fa8072" stroke="#e26d60" stroke-width="1"/>
                <path class="salmon-tail" d="M35,20 Q25,10 15,20 Q25,30 35,20" fill="#fa8072" stroke="#e26d60" stroke-width="1"/>
                <circle cx="80" cy="18" r="3" fill="black" />
                <path d="M70,15 Q69,20 70,25" stroke="#e26d60" stroke-width="1.5" fill="none" />
            </svg>
        `;
        container.appendChild(salmon);
        setTimeout(() => { if (salmon.parentNode) salmon.parentNode.removeChild(salmon); }, (duration + 2) * 1000);
    }
    
    // Inicializar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(createSalmon, 1000);
        setTimeout(createSalmon, 3000);
        setTimeout(createSalmon, 5000);
        setInterval(createSalmon, 5000);
    });
</script>

</body>
</html> 